var searchIndex = {};
searchIndex['toml'] = {"items":[[0,"","toml","A TOML-parsing library"],[1,"Parser","","Parser for converting a string to a TOML `Value` instance."],[11,"errors","","A list of all errors which have occurred during parsing.",0],[1,"ParserError","","A structure representing a parse error."],[11,"lo","","The low byte at which this error is pointing at.",1],[11,"hi","","One byte beyond the last character at which this error is pointing at.",1],[11,"desc","","A human-readable description explaining what the error is.",1],[1,"Encoder","","A structure to transform Rust values into TOML values."],[11,"toml","","Output TOML that is emitted. The current version of this encoder forces\nthe top-level representation of a structure to be a table.",2],[1,"Decoder","","A structure to transform TOML values into Rust values."],[11,"toml","","The TOML value left over after decoding. This can be used to inspect\nwhether fields were decoded or not.",3],[2,"Error","","Enumeration of errors which can occur while encoding a rust value into a\nTOML value."],[12,"NeedsKey","","Indication that a key was needed when a value was emitted, but no key\nwas previously emitted.",4],[12,"NoValue","","Indication that a key was emitted, but not value was emitted.",4],[12,"InvalidMapKeyLocation","","Indicates that a map key was attempted to be emitted at an invalid\nlocation.",4],[12,"InvalidMapKeyType","","Indicates that a type other than a string was attempted to be used as a\nmap key type.",4],[2,"Value","","Representation of a TOML value."],[12,"String","","",5],[12,"Integer","","",5],[12,"Float","","",5],[12,"Boolean","","",5],[12,"Datetime","","",5],[12,"Array","","",5],[12,"Table","","",5],[3,"encode","","Encodes an encodable value into a TOML value."],[3,"encode_str","","Encodes an encodable value into a TOML string."],[3,"decode","","Decodes a TOML value into a decodable type."],[3,"decode_str","","Decodes a string into a toml-encoded value."],[4,"Array","",""],[4,"Table","",""],[10,"clone","","",5],[10,"eq","","",5],[10,"ne","","",5],[10,"same_type","","Tests whether this and another value have the same type.",5],[10,"type_str","","Returns a human-readable representation of the type of this value.",5],[10,"as_str","","Extracts the string of this value if it is a string.",5],[10,"as_integer","","Extracts the integer value if it is an integer.",5],[10,"as_float","","Extracts the float value if it is a float.",5],[10,"as_bool","","Extracts the boolean value if it is a boolean.",5],[10,"as_datetime","","Extracts the datetime value if it is a datetime.",5],[10,"as_slice","","Extracts the array value if it is an array.",5],[10,"as_table","","Extracts the table value if it is a table.",5],[10,"lookup","","Lookups for value at specified path.",5],[10,"from_str","","",5]],"paths":[[1,"Parser"],[1,"ParserError"],[1,"Encoder"],[1,"Decoder"],[2,"Error"],[2,"Value"]]};
initSearch(searchIndex);
